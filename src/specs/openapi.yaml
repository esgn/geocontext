openapi: 3.1.0
info:
  title: geocontext
  description: |-
    Cette API **expérimentale** vise à faciliter l'exploitation des données de la Géoplateforme avec des LLM.
    Elle a vocation à devenir un module API Carto facilitant l'utilisation 
    des données de la Géoplateforme si son utilité est confirmée.

    NB : Il convient en parallèle d'intégrer l'appel à un service de géocodage 
    (voir [gpf-autocompletion.yaml](gpf-autocompletion.yaml) pour intégrer celui de la Géoplateforme)
  license:
    name: MIT
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.5.3

servers:
 - url: http://localhost:3000

termsOfService: https://github.com/mborne/geocontext#readme
contact:
  email: apicarto@ign.fr
externalDocs:
  description: Dépôt GitHub
  url: https://github.com/mborne/geocontext#readme

tags:
  - name: altitude
    description: Altitude
  - name: administratif
    description: Unités administratives
  - name: urbanisme
    description: Géoportail de l'Urbanisme

paths:

  /v1/altitude:
    get:
      tags:
        - altitude
      summary: Renvoie l’altitude pour une position donnée par sa longitude et sa latitude.
      description: Le service d'altimétrie de la Géoplateforme est appelé avec la longitude et la latitude en paramètres.
      operationId: getAltitude
      parameters:
        - in: query
          name: lon
          required: true
          description: La longitude du point.
          example: 6.869433
          schema:
            type: number
        - in: query
          name: lat
          required: true
          description: La latitude du point.
          example: 45.923697
          schema:
            type: number
      responses:
        '200':
          description: Position avec l'altitude.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AltitudeItem'
        '400':
          description: Mauvaise requête (paramètre invalide)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '500':
          description: Erreur système
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /v1/adminexpress:
    get:
      tags:
        - administratif
      summary: Renvoie les unités administratives (commune, département, région,...) pour une position donnée par sa longitude et sa latitude.
      description: |
        Le service WFS de la Géoplateforme (ADMINEXPRESS-COG.LATEST) est interrogé pour 
        récupérer les types suivants par intersection avec le point en entrée.
          * commune
          * canton
          * collectivite_territoriale
          * epci
          * departement
          * region 
          * arrondissement
      operationId: getAdminUnitsFromAdminExpress
      parameters:
        - in: query
          name: lon
          required: true
          description: the longitude of a location
          example: 6.869433
          schema:
            type: number
        - in: query
          name: lat
          required: true
          description: the latitude of a location
          example: 45.923697
          schema:
            type: number
      responses:
        '200':
          description: Unités administratives trouvées
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AdminExpressItem'

        '400':
          description: Mauvaise requête (paramètre invalide)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '500':
          description: erreur système
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /v1/parcellaire-express:
    get:
      tags:
        - administratif
      summary: "Renvoie les informations cadastrales pour une position donnée par sa longitude et sa latitude."
      description: |
        Le service WFS de la Géoplateforme (CADASTRALPARCELS.PARCELLAIRE_EXPRESS) est interrogé pour 
        récupérer les informations à proximité du point en entrée.
        
        Remarques :
        - Le résultat le plus proche est conservé pour chaque type
        - Une distance de 0.0 correspond au cas où il y a intersection.
      operationId: getParcellaireExpress
      parameters:
        - in: query
          name: lon
          required: true
          description: La longitude
          example: 6.869433
          schema:
            type: number
        - in: query
          name: lat
          required: true
          description: La latitude
          example: 45.923697
          schema:
            type: number
      responses:
        '200':
          description: Informations cadastrales trouvées
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ParcellaireExpressItem'

        '400':
          description: Mauvaise requête (paramètre invalide)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '500':
          description: Erreur système
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'



  /v1/urbanisme:
    get:
      tags:
        - urbanisme
      summary: "Renvoie les informations du document d'urbanisme (PLU, PLUi, POS, CC, PSMV) pour une position donnée par sa longitude et sa latitude."
      description: |
        Le service WFS de la Géoplateforme (wfs_du et wfs_scot) est interrogé pour 
        récupérer les informations suivantes à proximité du point en entrée.
        La distance au point de recherche est ajoutée dans la réponse 
        (0.0 correspond au cas où il y a intersection).
      operationId: getUrbanisme
      parameters:
        - in: query
          name: lon
          required: true
          description: La longitude
          example: 6.869433
          schema:
            type: number
        - in: query
          name: lat
          required: true
          description: La latitude
          example: 45.923697
          schema:
            type: number
      responses:
        '200':
          description: Documents d’urbanisme trouvés
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UrbanismeItem'

        '400':
          description: Mauvaise requête (paramètre invalide)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '500':
          description: erreur système
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /v1/sup:
    get:
      tags:
        - urbanisme
      summary: "Renvoie les assiettes des servitudes d'utilité publique (SUP) pour une position donnée par sa longitude et sa latitude."
      description: |
        Le service WFS de la Géoplateforme (wfs_sup) est interrogé pour 
        récupérer les types suivants à proximité du point en entrée.
        La distance au point de recherche est ajoutée dans la réponse (0.0 correspond au cas 
        où il y a intersection avec l'objet trouvé).
      operationId: getAssiettesServitudes
      parameters:
        - in: query
          name: lon
          required: true
          description: La longitude
          example: 6.869433
          schema:
            type: number
        - in: query
          name: lat
          required: true
          description: La latitude
          example: 45.923697
          schema:
            type: number
      responses:
        '200':
          description: Assiettes des servitudes d'utilité publique trouvées
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssietteServitudeItem'

        '400':
          description: Mauvaise requête (paramètre invalide)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
        '500':
          description: Erreur système
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'




components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: "An error occurred"
    BadRequestResponse:
      type: object
      properties:
        message:
          type: string
          example: "Invalid request parameters"

    #---------------------------------------------------
    # /v1/altitude
    #---------------------------------------------------
    AltitudeItem:
      type: object
      properties:
        source:
          type: string
          example: Géoplateforme (altimétrie)
        lon:
          type: number
          description: La longitude du point.
        lat:
          type: number
          description: La latitude du point.
        altitude:
          type: number
          description: L'altitude du point en mètres (null ou -99999 en l'absence de résultat).
        accuracy:
          type: string
          description: La précision de la valeur au point considéré.

    #---------------------------------------------------
    # /v1/adminexpress
    #---------------------------------------------------
    AdminExpressItem:
      type: object
      properties:
        type:
          type: string
          description: Le type de l'unité administrative.
          enum:
            - commune
            - canton
            - collectivite_territoriale
            - epci
            - departement
            - region
            - arrondissement
        id:
          type: string
          description: L'identifiant BDTOPO.
          example: COMMUNE_0000000009750652
        bbox:
          schema:
            $ref: '#/components/schemas/BoundingBox'
        nom:
          type: string
          description: Le nom de l'unité administrative.
          example: "Chamonix-Mont-Blanc"
        nom_m:
          type: string
          description: Le nom de l'unité administrative en majuscule.
          example: "CHAMONIX-MONT-BLANC"
        insee_com:
          type: string
          description: Le code INSEE de la commune.
          example: "74056"
        insee_dep:
          type: string
          description: Le code INSEE du département.
          example: "74"
        insee_reg:
          type: string
          description: Le code INSEE de la région.
          example: "74"
        statut:
          type: string
          description: Le statut de la commune.
          example: "Commune simple"
        population:
          type: number
          description: La population de la commune (non disponible pour les départements et régions)
          example: 8642
        insee_can:
          type: string
          description: Le code INSEE du canton
          example: "10"
        insee_arr:
          type: string
          description: Le code INSEE de l'arrondissement
          example: "2"
        siren_epci:
          type: string
          description: Le code SIREN des EPCI
          example: "200023372"

    #---------------------------------------------------
    # /v1/parcellaire-express
    #---------------------------------------------------
    ParcellaireExpressItem:
      type: object
      externalDocs:
        description: Parcellaire Express (PCI) - Descriptif de contenu
        url: https://geoservices.ign.fr/sites/default/files/2022-06/DC_Parcellaire_Express_%28PCI%29_1-1.pdf
      properties:
        id:
          type: string
          description: Identifiant technique
        type:
          type: string
          description: classe de l'objet
          enum:
            - arrondissement
            - commune
            - feuille
            - subdivision_fiscale
            - parcelle
            - localisant
        bbox:
          schema:
            $ref: '#/components/schemas/BoundingBox'
        distance:
          type: number
          description: La distance en degrée entre l'objet et la position.
          minimum: 0
        source:
          type: string
          example: Géoplateforme (WFS, CADASTRALPARCELS.PARCELLAIRE_EXPRESS)
        code_dep:
          type: string
          description: Code INSEE du département.
          example: "74"
        code_com:
          type: string
          description: Code de la commune.
          example: 056
        nom_com:
          type: string
          description: Nom de la commune.
          example: Chamonix-Mont-Blanc
        code_insee:
          type: string
          description: Numéro INSEE de la commune.
          example: "74056"
        feuille:
          type: integer
          description: Numéro de la feuille cadastrale.
          example: 7
        section:
          type: string
          description: Numéro de la section cadastrale.
        com_abs:
          type: string
          description: Ancien code de la commune en cas de fusion de communes.
          example: "000"
        code_arr:
          type: string
          description: Code de l’arrondissement.
          example: "000"
        idu:
          type: string
          description: Identifiant de la parcelle cadastrale.
          example: "740560000G4353"
        numero:
          type: string
          description: Numéro de la parcelle cadastrale.
          example: "4353"
        contenance:
          type: integer
          minimum: 0
          description: Superficie extraite de MAJIC exprimée en m².
          example: 178
        echelle:
          type: string
          description: Dénominateur de l’échelle principale du plan cadastral.
          example: 500
        edition:
          type: string
          format: date
          description: Numéro d’édition de la feuille cadastrale
          example: "2023-07-01"
      required:
        - id
        - type
        - bbox
        - nom_com
        - code_dep
        - code_insee
        - source

    #---------------------------------------------------
    # /v1/urbanisme
    #---------------------------------------------------
    UrbanismeItem:
      type: object
      properties:
        type:
          type: string
          description: Identifiant du type de l'objet
          enum:
            - scot
            - document
            - zone_urba
            - secteur_cc
            - info_pct
            - info_lin
            - info_surf
            - prescription_pct
            - prescription_lin
            - prescription_surf
        id:
          type: string
          description: Identifiant technique de l'objet
        bbox:
          schema:
            $ref: '#/components/schemas/BoundingBox'
        distance:
          type: number
          description: La distance en mètre entre l'objet et la position.
          minimum: 0
        source:
          type: string
          example: Géoplateforme - (WFS Géoportail de l'Urbanisme)
        gid:
          type: number
          description: Identifiant technique de l'objet
          example: 2905619
        gpu_doc_id:
          type: string
          description: Identifiant unique du document sur le GpU
          example: 398a91a8349876bc9f08c2830347b4f1
        partition:
          type: string
          description: Identifiant stable du document d'urbanisme sur le GpU
          example: DU_74056
        # champs métiers
        libelle:
          type: string
          description: Description physique de la prescription ou du périmètre d’information.
          example: "Zone à risque d'exposition au plomb"
        libelong:
          type: string
          description: Nom complet littéral de la zone tel qu’il apparaît dans le chapitre du règlement écrit.
        typezone:
          type: string
          description: Type de la zone classé dans une nomenclature simplifiée.
        txt:
          type: string
          description: Étiquette associée à la prescription ou à l'information
        typeinf:
          type: string
          description: Type d'information (InformationUrbaType)
          example: "17"
        stypeinf:
          type: string
          description: sous-type détaillant le type d'information
          example: "00"
        idurba: 
          type: string
          description: Identifiant du document d'urbanisme
          example: "74056_PLU_20231010"
        datvalid:
          type: string
          description: Date de la dernière validation de la prescription.
        nomfic:
          type: string
          description: Nom du fichier pdf contenant le texte décrivant la prescription
          example: "74056_reglement_20231010.pdf"
        # TODO : compléter ( https://cnig.gouv.fr/IMG/pdf/231220_standard_cnig_plu_v2024-01.pdf )
        # "typep": null,
        # "urlfic": null,
        # "insee": null,
        # "datvalid": null,
        # "stypep": null,
        # "idinfo": null,
        # "lib_idinfo": null,
        # "nature": null,
        # "symbole": null
      required:
        - type
        - id
        - bbox
        - source



    #---------------------------------------------------
    # /v1/assiette-sup
    #---------------------------------------------------
    AssietteServitudeItem:
      type: object
      description: Assiette de servitude d'utilité publique
      properties:
        type:
          type: string
          description: Identifiant du type de l'objet
          enum:
            - assiette_sup_p
            - assiette_sup_l
            - assiette_sup_s
        id:
          type: string
          description: Identifiant technique de l'objet
        bbox:
          schema:
            $ref: '#/components/schemas/BoundingBox'
        distance:
          type: number
          description: La distance en mètre entre l'objet et la position.
          minimum: 0
        source:
          type: string
          example: Géoplateforme - (WFS Géoportail de l'Urbanisme)
        gid:
          type: number
          description: Identifiant technique de l'objet
          example: 2905619
        gpu_doc_id:
          type: string
          description: Identifiant unique du document sur le GpU
          example: 398a91a8349876bc9f08c2830347b4f1
        suptype:
          type: string
          description: Code du type de servitude
          example: "ac1"
        partition:
          type: string
          description: Identifiant stable du document sur le GpU
          example: 172014607_SUP_74_AC1
        # champs métiers
        fichier:
          type: string
          description: Nom ou référence du ficher contenant l'acte instituant la servitude
          example: "AC1_Deux-fontaines--Eglise-Saint-Michel--Presbytere_20230421_act.pdf"
        idass:
          type: string
          description: Identifiant de l'assiette
          example: "AC1-172014607-2304250003-1-1"
        idgen:
          type: string
          description: Identifiant du générateur
          example: "AC1-172014607-2304250003-1"
        nomass:
          type: string
          description: Nom abrégé de l'assiette
        typeAss:
          type: string
          description: Nature de l'assiette selon sa vocation principale et la catégorie de SUP
          example: Périmètre des abords
        modegeoass:
          type: string
          description: Description de la méthode utilisée pour générer la géométrie de l'assiette
          example: Égale au générateur
        paramcalc:
          type: number
          description: Valeur du paramètre ayant permis de calculer l'assiette lorsque celle-ci correspond à un objet tampon
        srcgeoass:
          type: number
          description: Type de carte, de référentiel géographique utilisé en tant que source de géoréférencement lors de la digitalisation de la géométrie
          example: "Cadastre"
        datesrcass:
          type: string
          description: Date d'actualité du référentiel utilisé lors du géoréférencement de l'objet
          example: "20180101"
        # "angle1": null,
        # "angle2": null,
        # "rayon": null,
        # "h": null,
        # "href": null,
        # "xdebut": null,
        # "xfinal": null,
        # "ydebut": null,
        # "yfinal": null,
        # "largeur": null,
        nomsuplitt:
          type: string
          description: Nom littéral de la servitude, figurant dans l'acte l'ayant instaurée
          example: "Deux fontaines ; Eglise Saint-Michel ; Presbytère"
      required:
        - type
        - id
        - bbox
        - source

    #--------------------------------------------------------------------------
    # geojson
    #--------------------------------------------------------------------------
    BoundingBox:
      description: "Geo-spatial bounding box."
      type: array
      items:
        type: number
      minItems: 4
      maxItems: 4
